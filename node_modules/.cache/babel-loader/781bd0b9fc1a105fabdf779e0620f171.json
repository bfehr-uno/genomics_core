{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\components\\\\table\\\\GlobalFilter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200\n    }\n  }\n}));\n\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const count = preGlobalFilteredRows.length; // Global filter only works with pagination from the first page.\n  // This may not be a problem for server side pagination when\n  // only the current page is downloaded.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.search,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.searchIcon,\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n      value: globalFilter || '',\n      onChange: e => {\n        setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      },\n      placeholder: `${count} records...`,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      },\n      inputProps: {\n        'aria-label': 'search'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalFilter, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = GlobalFilter;\nGlobalFilter.propTypes = {\n  preGlobalFilteredRows: PropTypes.array.isRequired,\n  globalFilter: PropTypes.string.isRequired,\n  setGlobalFilter: PropTypes.func.isRequired\n};\nexport default GlobalFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalFilter\");","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/components/table/GlobalFilter.js"],"names":["React","InputBase","fade","makeStyles","PropTypes","SearchIcon","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","classes","count","length","e","target","value","undefined","root","input","propTypes","array","isRequired","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst GlobalFilter = ({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) => {\r\n  const classes = useStyles();\r\n  const count = preGlobalFilteredRows.length;\r\n\r\n  // Global filter only works with pagination from the first page.\r\n  // This may not be a problem for server side pagination when\r\n  // only the current page is downloaded.\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        value={globalFilter || ''}\r\n        onChange={(e) => {\r\n          setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nGlobalFilter.propTypes = {\r\n  preGlobalFilteredRows: PropTypes.array.isRequired,\r\n  globalFilter: PropTypes.string.isRequired,\r\n  setGlobalFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GlobalFilter;\r\n"]},"metadata":{},"sourceType":"module"}