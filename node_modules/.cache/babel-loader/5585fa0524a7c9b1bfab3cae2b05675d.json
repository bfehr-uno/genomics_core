{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\components\\\\Samples.js\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, getDoc, getDocs, query, where } from 'firebase/firestore';\nimport Component from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getSamples = () => {\n  initializeApp({\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n    authDomain: 'uno-genomics.firebaseapp.com',\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n    projectId: 'uno-genomics',\n    storageBucket: 'uno-genomics.appspot.com',\n    messagingSenderId: '351603848354',\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n  });\n  const db = getFirestore();\n\n  if (localStorage.getItem('adminMode') === 'true') {\n    const samples = getDoc(doc(db, 'samples'), 'samples', 'samples');\n    this.setState({\n      samples\n    });\n  } else {\n    const q = query(doc(db, 'samples'), where('userID', '==', localStorage.getItem('userID')));\n    const samples = getDocs(q);\n    this.setState({\n      samples\n    });\n  }\n};\n\nclass Samples extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sample Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date Submitted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Estimated Time of Completion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.samples.forEach(sample => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.submissionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.stage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.eta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Samples;","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/components/Samples.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","initializeApp","getFirestore","doc","getDoc","getDocs","query","where","Component","getSamples","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","localStorage","getItem","samples","setState","q","Samples","constructor","props","render","state","forEach","sample","name","submissionDate","stage","eta"],"mappings":";AAAA,SACEA,KADF,EACSC,SADT,EACoBC,SADpB,EAC+BC,cAD/B,EAC+CC,SAD/C,EAC0DC,QAD1D,QAEO,mBAFP;AAGA,SAASC,aAAT,QAA8B,cAA9B;AACA,SACEC,YADF,EACgBC,GADhB,EACqBC,MADrB,EAC6BC,OAD7B,EACsCC,KADtC,EAC6CC,KAD7C,QAEO,oBAFP;AAGA,OAAOC,SAAP,MAAsB,OAAtB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvBR,EAAAA,aAAa,CAAC;AACZS,IAAAA,MAAM,EAAE,yCADI;AAEZC,IAAAA,UAAU,EAAE,8BAFA;AAGZC,IAAAA,WAAW,EAAE,kDAHD;AAIZC,IAAAA,SAAS,EAAE,cAJC;AAKZC,IAAAA,aAAa,EAAE,0BALH;AAMZC,IAAAA,iBAAiB,EAAE,cANP;AAOZC,IAAAA,KAAK,EAAE;AAPK,GAAD,CAAb;AASA,QAAMC,EAAE,GAAGf,YAAY,EAAvB;;AAEA,MAAIgB,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,MAA1C,EAAkD;AAChD,UAAMC,OAAO,GAAGhB,MAAM,CAACD,GAAG,CAACc,EAAD,EAAK,SAAL,CAAJ,EAAqB,SAArB,EAAgC,SAAhC,CAAtB;AACA,SAAKI,QAAL,CAAc;AACZD,MAAAA;AADY,KAAd;AAGD,GALD,MAKO;AACL,UAAME,CAAC,GAAGhB,KAAK,CAACH,GAAG,CAACc,EAAD,EAAK,SAAL,CAAJ,EAAqBV,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBW,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAjB,CAA1B,CAAf;AACA,UAAMC,OAAO,GAAGf,OAAO,CAACiB,CAAD,CAAvB;AACA,SAAKD,QAAL,CAAc;AACZD,MAAAA;AADY,KAAd;AAGD;AACF,CAxBD;;AA0BA,MAAMG,OAAN,SAAsBf,SAAtB,CAAgC;AAC9BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAAA,YAAC,cAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,SAAD;AAAA,oBACI,KAAKC,KAAL,CAAWP,OAAX,CAAmBQ,OAAnB,CAA4BC,MAAD,iBAC3B,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA,wBAAYA,MAAM,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYD,MAAM,CAACE;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA,wBAAYF,MAAM,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA,wBAAYH,MAAM,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAsBD;;AA7B6B;;AAgChC,eAAeV,OAAf","sourcesContent":["import {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow\r\n} from '@material-ui/core';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, doc, getDoc, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport Component from 'react';\r\n\r\nconst getSamples = () => {\r\n  initializeApp({\r\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n    authDomain: 'uno-genomics.firebaseapp.com',\r\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n    projectId: 'uno-genomics',\r\n    storageBucket: 'uno-genomics.appspot.com',\r\n    messagingSenderId: '351603848354',\r\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n  });\r\n  const db = getFirestore();\r\n\r\n  if (localStorage.getItem('adminMode') === 'true') {\r\n    const samples = getDoc(doc(db, 'samples'), 'samples', 'samples');\r\n    this.setState({\r\n      samples\r\n    });\r\n  } else {\r\n    const q = query(doc(db, 'samples'), where('userID', '==', localStorage.getItem('userID')));\r\n    const samples = getDocs(q);\r\n    this.setState({\r\n      samples\r\n    });\r\n  }\r\n};\r\n\r\nclass Samples extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Sample Name</TableCell>\r\n            <TableCell>Date Submitted</TableCell>\r\n            <TableCell>Stage</TableCell>\r\n            <TableCell>Estimated Time of Completion</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { this.state.samples.forEach((sample) => (\r\n            <TableRow>\r\n              <TableCell>{sample.name}</TableCell>\r\n              <TableCell>{sample.submissionDate}</TableCell>\r\n              <TableCell>{sample.stage}</TableCell>\r\n              <TableCell>{sample.eta}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  };\r\n}\r\n\r\nexport default Samples;\r\n"]},"metadata":{},"sourceType":"module"}