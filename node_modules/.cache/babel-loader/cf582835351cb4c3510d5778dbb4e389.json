{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\pages\\\\Login.js\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Box, Container, Typography, TextField, Button, Link } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { Navigate } from 'react-router';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs, query, where } from 'firebase/firestore';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst initializeDB = () => {\n  initializeApp({\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n    authDomain: 'uno-genomics.firebaseapp.com',\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n    projectId: 'uno-genomics',\n    storageBucket: 'uno-genomics.appspot.com',\n    messagingSenderId: '351603848354',\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n  });\n  return getFirestore();\n};\n\nconst login = async (db, email, password) => {\n  const docsRef = collection(db, 'clients');\n  const q1 = query(docsRef, where('email', '==', email));\n  const q2 = query(docsRef, where('password', '==', password));\n  const querySnapshot1 = await getDocs(q1);\n  const querySnapshot2 = await getDocs(q2);\n\n  if (querySnapshot1.length === 1 && querySnapshot2.length > 0) {\n    for (let i = 0; i < querySnapshot1.length; i++) {\n      if (email === querySnapshot1[0].email) {\n        return querySnapshot1[0].email;\n      }\n    }\n  }\n\n  return '';\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      failedLogin: false\n    };\n  }\n\n  render() {\n    const {\n      failedLogin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"UNO COVID Resources Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: 'email',\n              password: 'password'\n            },\n            validationSchema: Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            }),\n            onSubmit: values => {\n              const db = initializeDB();\n              const userID = login(db, values.email, values.password);\n\n              if (userID !== '') {\n                localStorage.setItem('userID', userID);\n                Navigate('/dashboard', {\n                  replace: true\n                });\n              } else {\n                this.setState({\n                  failedLogin: true\n                });\n              }\n            },\n            children: [{\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }, \" =>  (\", /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"h2\",\n                  children: \" Sign in \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.email && errors.email),\n                fullWidth: true,\n                helperText: touched.email && errors.email,\n                label: \"email\",\n                margin: \"normal\",\n                name: \"email\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                type: \"email\",\n                value: values.email,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.password && errors.password),\n                fullWidth: true,\n                helperText: touched.password && errors.password,\n                label: \"Password\",\n                margin: \"normal\",\n                name: \"password\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                type: \"password\",\n                value: values.password,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  py: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  disabled: isSubmitting,\n                  fullWidth: true,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \" Sign in now \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), failedLogin && /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"body1\",\n                children: \" Username and Password combination unknown. Try again. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  component: RouterLink,\n                  to: \"/register\",\n                  variant: \"h6\",\n                  underline: \"hover\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/pages/Login.js"],"names":["Link","RouterLink","Helmet","Yup","Box","Container","Typography","TextField","Button","Formik","Navigate","initializeApp","getFirestore","collection","getDocs","query","where","Component","initializeDB","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","login","db","email","password","docsRef","q1","q2","querySnapshot1","querySnapshot2","length","i","Login","constructor","props","state","failedLogin","render","backgroundColor","display","flexDirection","height","justifyContent","object","shape","string","max","required","values","userID","localStorage","setItem","replace","setState","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","Boolean","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Box, Container, Typography, TextField, Button, Link\r\n} from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport { Navigate } from 'react-router';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport { Component } from 'react';\r\n\r\nconst initializeDB = () => {\r\n  initializeApp({\r\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n    authDomain: 'uno-genomics.firebaseapp.com',\r\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n    projectId: 'uno-genomics',\r\n    storageBucket: 'uno-genomics.appspot.com',\r\n    messagingSenderId: '351603848354',\r\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n  });\r\n  return getFirestore();\r\n};\r\n\r\nconst login = async (db, email, password) => {\r\n  const docsRef = collection(db, 'clients');\r\n  const q1 = query(docsRef, where('email', '==', email));\r\n  const q2 = query(docsRef, where('password', '==', password));\r\n  const querySnapshot1 = await getDocs(q1);\r\n  const querySnapshot2 = await getDocs(q2);\r\n\r\n  if (querySnapshot1.length === 1 && querySnapshot2.length > 0) {\r\n    for (let i = 0; i < querySnapshot1.length; i++) {\r\n      if (email === querySnapshot1[0].email) {\r\n        return querySnapshot1[0].email;\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { failedLogin: false };\r\n  }\r\n\r\n  render() {\r\n    const { failedLogin } = this.state;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>UNO COVID Resources Collection</title>\r\n        </Helmet>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'background.default',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Formik\r\n              initialValues={{ email: 'email', password: 'password' }}\r\n              validationSchema={Yup.object().shape({ email: Yup.string().email('Must be a valid email').max(255).required('Email is required'), password: Yup.string().max(255).required('Password is required') })}\r\n              onSubmit={(values) => {\r\n                const db = initializeDB();\r\n                const userID = login(db, values.email, values.password);\r\n                if (userID !== '') {\r\n                  localStorage.setItem('userID', userID);\r\n                  Navigate('/dashboard', { replace: true });\r\n                } else {\r\n                  this.setState({\r\n                    failedLogin: true\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              {({\r\n                errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values })} =>  (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography color=\"textPrimary\" variant=\"h2\"> Sign in </Typography>\r\n                  </Box>\r\n                  <TextField error={Boolean(touched.email && errors.email)} fullWidth helperText={touched.email && errors.email} label=\"email\" margin=\"normal\" name=\"email\" onBlur={handleBlur} onChange={handleChange} type=\"email\" value={values.email} variant=\"outlined\" />\r\n                  <TextField error={Boolean(touched.password && errors.password)} fullWidth helperText={touched.password && errors.password} label=\"Password\" margin=\"normal\" name=\"password\" onBlur={handleBlur} onChange={handleChange} type=\"password\" value={values.password} variant=\"outlined\" />\r\n                  <Box sx={{ py: 2 }}>\r\n                    <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\"> Sign in now </Button>\r\n                  </Box>\r\n                  {failedLogin && <Typography color=\"textPrimary\" variant=\"body1\"> Username and Password combination unknown. Try again. </Typography>}\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    Don&apos;t have an account?\r\n                    {' '}\r\n                    <Link component={RouterLink} to=\"/register\" variant=\"h6\" underline=\"hover\">\r\n                      Sign up\r\n                    </Link>\r\n                  </Typography>\r\n                </form>\r\n              )\r\n           </Formik>\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}