{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\pages\\\\Login.js\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container, Typography, TextField, Button, Link } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport { Navigate } from 'react-router';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs, query, where } from 'firebase/firestore';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst initializeDB = () => {\n  initializeApp({\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n    authDomain: 'uno-genomics.firebaseapp.com',\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n    projectId: 'uno-genomics',\n    storageBucket: 'uno-genomics.appspot.com',\n    messagingSenderId: '351603848354',\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n  });\n  return getFirestore();\n};\n\nconst login = async (db, email, password) => {\n  const docsRef = collection(db, 'clients');\n  const q1 = query(docsRef, where('email', '==', email));\n  const q2 = query(docsRef, where('password', '==', password));\n  const querySnapshot1 = await getDocs(q1);\n  const querySnapshot2 = await getDocs(q2);\n\n  if (querySnapshot1.length === 1 && querySnapshot2.length > 0) {\n    for (let i = 0; i < querySnapshot1.length; i++) {\n      if (email === querySnapshot1[0].email) {\n        return querySnapshot1[0].email;\n      }\n    }\n  }\n\n  return '';\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Must be at least 8 characters';\n  }\n\n  return errors;\n};\n\nconst formik = useFormik({\n  initialValues: {\n    email: 'email',\n    password: 'password'\n  },\n  validate,\n  onSubmit: values => {\n    const db = initializeDB();\n    const userID = login(db, values.email, values.password);\n\n    if (userID !== '') {\n      localStorage.setItem('userID', userID);\n      Navigate('/dashboard', {\n        replace: true\n      });\n    } else {\n      this.setState({\n        failedLogin: true\n      });\n    }\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      failedLogin: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"UNO COVID Resources Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \" Sign in \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.email && formik.errors.email),\n              fullWidth: true,\n              helperText: formik.touched.email && formik.errors.email,\n              label: \"email\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              type: \"email\",\n              value: formik.values.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.password && formik.errors.password),\n              fullWidth: true,\n              helperText: formik.touched.password && formik.errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              type: \"password\",\n              value: formik.values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                py: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: formik.isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \" Sign in now \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), this.state.failedLogin && /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"body1\",\n              children: \" Username and Password combination unknown. Try again. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/register\",\n                variant: \"h6\",\n                underline: \"hover\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/pages/Login.js"],"names":["Link","RouterLink","Helmet","Box","Container","Typography","TextField","Button","useFormik","Navigate","initializeApp","getFirestore","collection","getDocs","query","where","Component","initializeDB","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","login","db","email","password","docsRef","q1","q2","querySnapshot1","querySnapshot2","length","i","validate","values","errors","formik","initialValues","onSubmit","userID","localStorage","setItem","replace","setState","failedLogin","Login","constructor","props","state","render","backgroundColor","display","flexDirection","height","justifyContent","handleSubmit","mb","Boolean","touched","handleBlur","handleChange","py","isSubmitting"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  Box, Container, Typography, TextField, Button, Link\r\n} from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { Navigate } from 'react-router';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport { Component } from 'react';\r\n\r\nconst initializeDB = () => {\r\n  initializeApp({\r\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n    authDomain: 'uno-genomics.firebaseapp.com',\r\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n    projectId: 'uno-genomics',\r\n    storageBucket: 'uno-genomics.appspot.com',\r\n    messagingSenderId: '351603848354',\r\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n  });\r\n  return getFirestore();\r\n};\r\n\r\nconst login = async (db, email, password) => {\r\n  const docsRef = collection(db, 'clients');\r\n  const q1 = query(docsRef, where('email', '==', email));\r\n  const q2 = query(docsRef, where('password', '==', password));\r\n  const querySnapshot1 = await getDocs(q1);\r\n  const querySnapshot2 = await getDocs(q2);\r\n\r\n  if (querySnapshot1.length === 1 && querySnapshot2.length > 0) {\r\n    for (let i = 0; i < querySnapshot1.length; i++) {\r\n      if (email === querySnapshot1[0].email) {\r\n        return querySnapshot1[0].email;\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n};\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Required';\r\n  } else if (values.password.length < 8) {\r\n    errors.password = 'Must be at least 8 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst formik = useFormik({\r\n  initialValues: {\r\n    email: 'email',\r\n    password: 'password'\r\n  },\r\n  validate,\r\n  onSubmit: (values) => {\r\n    const db = initializeDB();\r\n    const userID = login(db, values.email, values.password);\r\n    if (userID !== '') {\r\n      localStorage.setItem('userID', userID);\r\n      Navigate('/dashboard', { replace: true });\r\n    } else {\r\n      this.setState({\r\n        failedLogin: true\r\n      });\r\n    }\r\n  },\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { failedLogin: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>UNO COVID Resources Collection</title>\r\n        </Helmet>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'background.default',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography color=\"textPrimary\" variant=\"h2\"> Sign in </Typography>\r\n              </Box>\r\n              <TextField error={Boolean(formik.touched.email && formik.errors.email)} fullWidth helperText={formik.touched.email && formik.errors.email} label=\"email\" margin=\"normal\" name=\"email\" onBlur={formik.handleBlur} onChange={formik.handleChange} type=\"email\" value={formik.values.email} variant=\"outlined\" />\r\n              <TextField error={Boolean(formik.touched.password && formik.errors.password)} fullWidth helperText={formik.touched.password && formik.errors.password} label=\"Password\" margin=\"normal\" name=\"password\" onBlur={formik.handleBlur} onChange={formik.handleChange} type=\"password\" value={formik.values.password} variant=\"outlined\" />\r\n              <Box sx={{ py: 2 }}>\r\n                <Button color=\"primary\" disabled={formik.isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\"> Sign in now </Button>\r\n              </Box>\r\n              {this.state.failedLogin && <Typography color=\"textPrimary\" variant=\"body1\"> Username and Password combination unknown. Try again. </Typography>}\r\n              <Typography color=\"textSecondary\" variant=\"body1\">\r\n                Don&apos;t have an account?\r\n                {' '}\r\n                <Link component={RouterLink} to=\"/register\" variant=\"h6\" underline=\"hover\">\r\n                  Sign up\r\n                </Link>\r\n              </Typography>\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}