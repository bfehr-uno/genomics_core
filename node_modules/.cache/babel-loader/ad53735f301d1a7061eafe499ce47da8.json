{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\pages\\\\Dashboard.js\";\n\n/* import { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, query, where\r\n} from 'firebase/firestore'; */\nimport { Helmet } from 'react-helmet';\nimport Samples from '../components/client/Samples';\n/* const firebaseConfig = initializeApp({\r\n  apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n  authDomain: 'uno-genomics.firebaseapp.com',\r\n  databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n  projectId: 'uno-genomics',\r\n  storageBucket: 'uno-genomics.appspot.com',\r\n  messagingSenderId: '351603848354',\r\n  appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n});\r\nconst db = getFirestore();\r\nasync function get_samples() {\r\n  const q = query(collection(db, 'samples'), where('user_id', '==', user));\r\n  const samples_ref = await getDocs(q);\r\n\r\n  let samples = [];\r\n  samples_ref.forEach((sample_data) => {\r\n    let data = sample_data.data();\r\n    let sample = []\r\n    data.forEach((datum) => {\r\n      sample.push(datum);\r\n    });\r\n    samples.push(sample);\r\n  })\r\n} */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst samples = [0];\n\nconst Dashboard = () => {\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard | Material Kit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Samples, {\n      samples: samples\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/pages/Dashboard.js"],"names":["Helmet","Samples","samples","Dashboard"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAG,CAAC,CAAD,CAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AAAA;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAMD,CAPD;;KAAMC,S;AASN,eAAeA,SAAf","sourcesContent":["/* import { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, query, where\r\n} from 'firebase/firestore'; */\r\nimport { Helmet } from 'react-helmet';\r\nimport Samples from '../components/client/Samples';\r\n\r\n/* const firebaseConfig = initializeApp({\r\n  apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n  authDomain: 'uno-genomics.firebaseapp.com',\r\n  databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n  projectId: 'uno-genomics',\r\n  storageBucket: 'uno-genomics.appspot.com',\r\n  messagingSenderId: '351603848354',\r\n  appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n});\r\nconst db = getFirestore();\r\nasync function get_samples() {\r\n  const q = query(collection(db, 'samples'), where('user_id', '==', user));\r\n  const samples_ref = await getDocs(q);\r\n\r\n  let samples = [];\r\n  samples_ref.forEach((sample_data) => {\r\n    let data = sample_data.data();\r\n    let sample = []\r\n    data.forEach((datum) => {\r\n      sample.push(datum);\r\n    });\r\n    samples.push(sample);\r\n  })\r\n} */\r\n\r\nconst samples = [0];\r\n\r\nconst Dashboard = () => {\r\n  <>\r\n    <Helmet>\r\n      <title>Dashboard | Material Kit</title>\r\n    </Helmet>\r\n    <Samples samples={samples} />\r\n  </>\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}