{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\components\\\\Samples.js\";\nimport React from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs, query, where } from 'firebase/firestore';\nimport { MaterialTable } from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getSamples = async () => {\n  initializeApp({\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n    authDomain: 'uno-genomics.firebaseapp.com',\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n    projectId: 'uno-genomics',\n    storageBucket: 'uno-genomics.appspot.com',\n    messagingSenderId: '351603848354',\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n  });\n  const samplesCollection = collection(getFirestore(), 'samples');\n  const samples = [];\n\n  if (localStorage.getItem('isAdmin') === 'true') {\n    const querySnapshot = await getDocs(samplesCollection);\n    querySnapshot.forEach(doc => {\n      samples.push(doc.data());\n    });\n  } else {\n    const querySnapshot = await getDocs(query(samplesCollection, where('userID', '==', localStorage.getItem('userID'))));\n    querySnapshot.forEach(doc => {\n      samples.push(doc.data());\n    });\n  }\n\n  return samples;\n};\n\nconst Samples = () => {\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Stage',\n    field: 'stage'\n  }, {\n    title: 'Date of Submission',\n    field: 'submissionDate'\n  }, {\n    title: 'Estimated Completion Date',\n    field: 'completionDateEstimate'\n  }];\n  const data = getSamples();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Samples\",\n      columns: columns,\n      data: data,\n      options: {\n        search: true,\n        paging: false,\n        filtering: true,\n        exportButton: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Samples;\nexport default Samples;\n\nvar _c;\n\n$RefreshReg$(_c, \"Samples\");","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/components/Samples.js"],"names":["React","initializeApp","getFirestore","collection","getDocs","query","where","MaterialTable","getSamples","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","samplesCollection","samples","localStorage","getItem","querySnapshot","forEach","doc","push","data","Samples","columns","title","field","search","paging","filtering","exportButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SACEC,YADF,EACgBC,UADhB,EAC4BC,OAD5B,EACqCC,KADrC,EAC4CC,KAD5C,QAEO,oBAFP;AAGA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,MAAMC,UAAU,GAAG,YAAY;AAC7BP,EAAAA,aAAa,CAAC;AACZQ,IAAAA,MAAM,EAAE,yCADI;AAEZC,IAAAA,UAAU,EAAE,8BAFA;AAGZC,IAAAA,WAAW,EAAE,kDAHD;AAIZC,IAAAA,SAAS,EAAE,cAJC;AAKZC,IAAAA,aAAa,EAAE,0BALH;AAMZC,IAAAA,iBAAiB,EAAE,cANP;AAOZC,IAAAA,KAAK,EAAE;AAPK,GAAD,CAAb;AAUA,QAAMC,iBAAiB,GAAGb,UAAU,CAACD,YAAY,EAAb,EAAiB,SAAjB,CAApC;AACA,QAAMe,OAAO,GAAG,EAAhB;;AAEA,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,MAAxC,EAAgD;AAC9C,UAAMC,aAAa,GAAG,MAAMhB,OAAO,CAACY,iBAAD,CAAnC;AACAI,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BL,MAAAA,OAAO,CAACM,IAAR,CAAaD,GAAG,CAACE,IAAJ,EAAb;AACD,KAFD;AAGD,GALD,MAKO;AACL,UAAMJ,aAAa,GAAG,MAAMhB,OAAO,CAACC,KAAK,CAACW,iBAAD,EAAoBV,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBY,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAjB,CAAzB,CAAN,CAAnC;AACAC,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC7BL,MAAAA,OAAO,CAACM,IAAR,CAAaD,GAAG,CAACE,IAAJ,EAAb;AACD,KAFD;AAGD;;AAED,SAAOP,OAAP;AACD,CA3BD;;AA6BA,MAAMQ,OAAO,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,oBAAT;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,2BAAT;AAAsCC,IAAAA,KAAK,EAAE;AAA7C,GAJc,CAAhB;AAOA,QAAMJ,IAAI,GAAGhB,UAAU,EAAvB;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAEkB,OAFX;AAGE,MAAA,IAAI,EAAEF,IAHR;AAIE,MAAA,OAAO,EAAE;AACPK,QAAAA,MAAM,EAAE,IADD;AACOC,QAAAA,MAAM,EAAE,KADf;AACsBC,QAAAA,SAAS,EAAE,IADjC;AACuCC,QAAAA,YAAY,EAAE;AADrD;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;KAAMP,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport { MaterialTable } from 'material-table';\r\n\r\nconst getSamples = async () => {\r\n  initializeApp({\r\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n    authDomain: 'uno-genomics.firebaseapp.com',\r\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n    projectId: 'uno-genomics',\r\n    storageBucket: 'uno-genomics.appspot.com',\r\n    messagingSenderId: '351603848354',\r\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n  });\r\n\r\n  const samplesCollection = collection(getFirestore(), 'samples');\r\n  const samples = [];\r\n\r\n  if (localStorage.getItem('isAdmin') === 'true') {\r\n    const querySnapshot = await getDocs(samplesCollection);\r\n    querySnapshot.forEach((doc) => {\r\n      samples.push(doc.data());\r\n    });\r\n  } else {\r\n    const querySnapshot = await getDocs(query(samplesCollection, where('userID', '==', localStorage.getItem('userID'))));\r\n    querySnapshot.forEach((doc) => {\r\n      samples.push(doc.data());\r\n    });\r\n  }\r\n\r\n  return samples;\r\n};\r\n\r\nconst Samples = () => {\r\n  const columns = [\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Stage', field: 'stage' },\r\n    { title: 'Date of Submission', field: 'submissionDate' },\r\n    { title: 'Estimated Completion Date', field: 'completionDateEstimate' }\r\n  ];\r\n\r\n  const data = getSamples();\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable \r\n        title=\"Samples\" \r\n        columns={columns} \r\n        data={data} \r\n        options={{ \r\n          search: true, paging: false, filtering: true, exportButton: true \r\n        }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Samples;\r\n"]},"metadata":{},"sourceType":"module"}