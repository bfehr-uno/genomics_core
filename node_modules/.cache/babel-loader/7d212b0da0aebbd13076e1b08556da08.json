{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\components\\\\client\\\\Samples.js\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Samples = ({\n  samples\n}) => /*#__PURE__*/_jsxDEV(TableContainer, {\n  children: /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Sample Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Date Submitted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Estimated Time of Completion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: samples.array.forEach(({\n        name,\n        submissionDate,\n        stage,\n        eta\n      }) => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: submissionDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: eta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Samples;\nSamples.propTypes = {\n  samples: PropTypes.array\n};\nexport default Samples;\n\nvar _c;\n\n$RefreshReg$(_c, \"Samples\");","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/components/client/Samples.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","PropTypes","Samples","samples","array","forEach","name","submissionDate","stage","eta","propTypes"],"mappings":";AAAA,SACEA,KADF,EACSC,SADT,EACoBC,SADpB,EAC+BC,cAD/B,EAC+CC,SAD/C,EAC0DC,QAD1D,QAEO,mBAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd,QAAC,cAAD;AAAA,yBACE,QAAC,KAAD;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,SAAD;AAAA,gBACIA,OAAO,CAACC,KAAR,CAAcC,OAAd,CAAsB,CAAC;AACvBC,QAAAA,IADuB;AACjBC,QAAAA,cADiB;AACDC,QAAAA,KADC;AACMC,QAAAA;AADN,OAAD,kBAGtB,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYH;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,oBAAYC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA,oBAAYC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA,oBAAYC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AADJ;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMP,O;AA2BNA,OAAO,CAACQ,SAAR,GAAoB;AAClBP,EAAAA,OAAO,EAAEF,SAAS,CAACG;AADD,CAApB;AAIA,eAAeF,OAAf","sourcesContent":["import {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Samples = ({ samples }) => (\r\n  <TableContainer>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Sample Name</TableCell>\r\n          <TableCell>Date Submitted</TableCell>\r\n          <TableCell>Stage</TableCell>\r\n          <TableCell>Estimated Time of Completion</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        { samples.array.forEach(({\r\n          name, submissionDate, stage, eta\r\n        }) => (\r\n          <TableRow>\r\n            <TableCell>{name}</TableCell>\r\n            <TableCell>{submissionDate}</TableCell>\r\n            <TableCell>{stage}</TableCell>\r\n            <TableCell>{eta}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n);\r\n\r\nSamples.propTypes = {\r\n  samples: PropTypes.array,\r\n}\r\n\r\nexport default Samples;\r\n"]},"metadata":{},"sourceType":"module"}