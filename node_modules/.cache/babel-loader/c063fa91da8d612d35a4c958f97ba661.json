{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\components\\\\Samples.js\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, doc, getDoc, getDocs, query, where } from 'firebase/firestore';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getSamples = () => {\n  initializeApp({\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n    authDomain: 'uno-genomics.firebaseapp.com',\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n    projectId: 'uno-genomics',\n    storageBucket: 'uno-genomics.appspot.com',\n    messagingSenderId: '351603848354',\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n  });\n  const samplesCollection = getFirestore().collection('samples');\n  let samples = [];\n\n  if (localStorage.getItem('adminMode') === 'true') {\n    let samples = {};\n    samplesCollection.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        samples.push(doc.data());\n      });\n    });\n  } else {\n    sampleCollection.query(where('userID', '==', localStorage.getItem('userID'))).then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        samples.push(doc.data());\n      });\n    });\n  }\n\n  return samples;\n};\n\nclass Samples extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      samples: getSamples()\n    };\n  }\n\n  render() {\n    const {\n      samples\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sample Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date Submitted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Estimated Time of Completion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: samples.forEach(sample => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.submissionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.stage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: sample.eta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Samples;","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/components/Samples.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","initializeApp","getFirestore","doc","getDoc","getDocs","query","where","Component","getSamples","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","samplesCollection","collection","samples","localStorage","getItem","get","then","querySnapshot","forEach","push","data","sampleCollection","Samples","constructor","props","state","render","sample","name","submissionDate","stage","eta"],"mappings":"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","sourcesContent":["import {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow\r\n} from '@material-ui/core';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, doc, getDoc, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport { Component } from 'react';\r\n\r\nconst getSamples = () => {\r\n  initializeApp({\r\n    apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n    authDomain: 'uno-genomics.firebaseapp.com',\r\n    databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n    projectId: 'uno-genomics',\r\n    storageBucket: 'uno-genomics.appspot.com',\r\n    messagingSenderId: '351603848354',\r\n    appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n  });\r\n\r\n  const samplesCollection = getFirestore().collection('samples');\r\n  let samples = [];\r\n\r\n  if (localStorage.getItem('adminMode') === 'true') {\r\n    let samples = {};\r\n    samplesCollection.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        samples.push(doc.data());\r\n      })\r\n    })\r\n  } else {\r\n    sampleCollection.query(where('userID', '==', localStorage.getItem('userID'))).then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        samples.push(doc.data());\r\n      })\r\n    });\r\n  }\r\n\r\n  return samples;\r\n};\r\n\r\nclass Samples extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      samples: getSamples()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { samples } = this.state;\r\n    return (\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Sample Name</TableCell>\r\n              <TableCell>Date Submitted</TableCell>\r\n              <TableCell>Stage</TableCell>\r\n              <TableCell>Estimated Time of Completion</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            { samples.forEach((sample) => (\r\n              <TableRow>\r\n                <TableCell>{sample.name}</TableCell>\r\n                <TableCell>{sample.submissionDate}</TableCell>\r\n                <TableCell>{sample.stage}</TableCell>\r\n                <TableCell>{sample.eta}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Samples;\r\n"]},"metadata":{},"sourceType":"module"}