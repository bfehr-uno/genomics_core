{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bfehr\\\\dev\\\\genomics_core\\\\src\\\\pages\\\\Login.js\";\nimport { Link as RouterLink, Navigate, Routes, Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Box, Container, Typography, TextField, Button, Link } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs, query, where } from 'firebase/firestore';\nimport { Component } from 'react';\nimport Dashboard from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: null,\n      failedLogin: false\n    };\n  }\n\n  render() {\n    const {\n      userID,\n      failedLogin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"UNO COVID Resources Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: 'email',\n              password: 'password'\n            },\n            validationSchema: Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            }),\n            onSubmit: async values => {\n              initializeApp({\n                apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\n                authDomain: 'uno-genomics.firebaseapp.com',\n                databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\n                projectId: 'uno-genomics',\n                storageBucket: 'uno-genomics.appspot.com',\n                messagingSenderId: '351603848354',\n                appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\n              });\n              const db = getFirestore();\n              const docsRef = collection(db, 'accounts');\n              const q1 = query(docsRef, where('email', '==', values.email));\n              const q2 = query(docsRef, where('password', '==', values.password));\n              const querySnapshot1 = await getDocs(q1);\n              const querySnapshot2 = await getDocs(q2);\n              let isUser = false;\n              console.log(querySnapshot1.docs.length);\n\n              if (querySnapshot1.docs.length === 1 && querySnapshot2.docs.length > 0) {\n                for (let i = 0; i < querySnapshot2.docs.length; i++) {\n                  console.log('not ', querySnapshot2.docs[i].get('email'));\n                  if (values.email === querySnapshot2.docs[i].get('email')) isUser = true;\n                }\n              }\n\n              if (isUser) {\n                localStorage.setItem('userID', querySnapshot1.docs[0].get('userID'));\n                Navigate('/dashboard', {\n                  replace: true\n                });\n              } else {\n                this.setState({\n                  failedLogin: true\n                });\n              }\n            },\n            children: ({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"h2\",\n                  children: \" Sign in \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.email && errors.email),\n                fullWidth: true,\n                helperText: touched.email && errors.email,\n                label: \"email\",\n                margin: \"normal\",\n                name: \"email\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                type: \"email\",\n                value: values.email,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: Boolean(touched.password && errors.password),\n                fullWidth: true,\n                helperText: touched.password && errors.password,\n                label: \"Password\",\n                margin: \"normal\",\n                name: \"password\",\n                onBlur: handleBlur,\n                onChange: handleChange,\n                type: \"password\",\n                value: values.password,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  py: 2\n                },\n                children: [userID !== null && /*#__PURE__*/_jsxDEV(Navigate, {\n                  to: \"/dashboard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Routes, {\n                  children: /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/dashboard\",\n                    children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  disabled: isSubmitting,\n                  fullWidth: true,\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \" Sign in now \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), failedLogin && /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"body1\",\n                children: \" Username and Password combination unknown. Try again. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  component: RouterLink,\n                  to: \"/register\",\n                  variant: \"h6\",\n                  underline: \"hover\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/bfehr/dev/genomics_core/src/pages/Login.js"],"names":["Link","RouterLink","Navigate","Routes","Route","Helmet","Yup","Box","Container","Typography","TextField","Button","Formik","initializeApp","getFirestore","collection","getDocs","query","where","Component","Dashboard","Login","constructor","props","state","userID","failedLogin","render","backgroundColor","display","flexDirection","height","justifyContent","email","password","object","shape","string","max","required","values","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","docsRef","q1","q2","querySnapshot1","querySnapshot2","isUser","console","log","docs","length","i","get","localStorage","setItem","replace","setState","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","Boolean","py"],"mappings":"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","sourcesContent":["import {\r\n  Link as RouterLink, Navigate, Routes, Route\r\n} from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Box, Container, Typography, TextField, Button, Link\r\n} from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getFirestore, collection, getDocs, query, where\r\n} from 'firebase/firestore';\r\nimport { Component } from 'react';\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { userID: null, failedLogin: false };\r\n  }\r\n\r\n  render() {\r\n    const { userID, failedLogin } = this.state;\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>UNO COVID Resources Collection</title>\r\n        </Helmet>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'background.default',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Formik\r\n              initialValues={{ email: 'email', password: 'password' }}\r\n              validationSchema={Yup.object().shape({ email: Yup.string().email('Must be a valid email').max(255).required('Email is required'), password: Yup.string().max(255).required('Password is required') })}\r\n              onSubmit={async (values) => {\r\n                initializeApp({\r\n                  apiKey: 'AIzaSyC64KY9UehoX2fk7Ugw2XNPvG4zZ7sSdsQ',\r\n                  authDomain: 'uno-genomics.firebaseapp.com',\r\n                  databaseURL: 'https://uno-genomics-default-rtdb.firebaseio.com',\r\n                  projectId: 'uno-genomics',\r\n                  storageBucket: 'uno-genomics.appspot.com',\r\n                  messagingSenderId: '351603848354',\r\n                  appId: '1:351603848354:web:e974a024da6b7e7472d3fb'\r\n                });\r\n                const db = getFirestore();\r\n                const docsRef = collection(db, 'accounts');\r\n                const q1 = query(docsRef, where('email', '==', values.email));\r\n                const q2 = query(docsRef, where('password', '==', values.password));\r\n                const querySnapshot1 = await getDocs(q1);\r\n                const querySnapshot2 = await getDocs(q2);\r\n                let isUser = false;\r\n                console.log(querySnapshot1.docs.length);\r\n                if (querySnapshot1.docs.length === 1 && querySnapshot2.docs.length > 0) {\r\n                  for (let i = 0; i < querySnapshot2.docs.length; i++) {\r\n                    console.log('not ', querySnapshot2.docs[i].get('email'));\r\n                    if (values.email === querySnapshot2.docs[i].get('email')) isUser = true;\r\n                  }\r\n                }\r\n                if (isUser) {\r\n                  localStorage.setItem('userID', querySnapshot1.docs[0].get('userID'));\r\n                  Navigate('/dashboard', { replace: true });\r\n                } else {\r\n                  this.setState({\r\n                    failedLogin: true\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              {({\r\n                errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography color=\"textPrimary\" variant=\"h2\"> Sign in </Typography>\r\n                  </Box>\r\n                  <TextField error={Boolean(touched.email && errors.email)} fullWidth helperText={touched.email && errors.email} label=\"email\" margin=\"normal\" name=\"email\" onBlur={handleBlur} onChange={handleChange} type=\"email\" value={values.email} variant=\"outlined\" />\r\n                  <TextField error={Boolean(touched.password && errors.password)} fullWidth helperText={touched.password && errors.password} label=\"Password\" margin=\"normal\" name=\"password\" onBlur={handleBlur} onChange={handleChange} type=\"password\" value={values.password} variant=\"outlined\" />\r\n                  <Box sx={{ py: 2 }}>\r\n                    {userID !== null && <Navigate to=\"/dashboard\" />}\r\n                    <Routes>\r\n                      <Route path=\"/dashboard\">\r\n                        <Dashboard />\r\n                      </Route>\r\n                    </Routes>\r\n                    <Button color=\"primary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\"> Sign in now </Button>\r\n                  </Box>\r\n                  {failedLogin && <Typography color=\"textPrimary\" variant=\"body1\"> Username and Password combination unknown. Try again. </Typography>}\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    Don&apos;t have an account?\r\n                    {' '}\r\n                    <Link component={RouterLink} to=\"/register\" variant=\"h6\" underline=\"hover\">\r\n                      Sign up\r\n                    </Link>\r\n                  </Typography>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </Container>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}